pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  
  environment {
    SONAR_URL = "http://3.87.19.83:9000"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "ashhadhere"
    DOCKER_IMAGE = "ashhadhere/ultimate-cicd:${BUILD_NUMBER}"
  }
  
  stages {
    stage('Checkout') {
      steps {
        script {
          sh 'echo "Checking out repository..."'
          checkout scm
        }
      }
    }

    stage('Build and Test') {
      steps {
        script {
          sh '''
            echo "Listing files..."
            ls -ltr
            echo "Building Maven Project..."
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package
          '''
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            echo "Running SonarQube Analysis..."
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=${SONAR_AUTH_TOKEN} -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          withDockerRegistry([credentialsId: 'docker-cred', url: '']) {
            sh '''
              echo "Building Docker image..."
              cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
              docker build -t ${DOCKER_IMAGE} .
              
              echo "Pushing Docker image..."
              docker push ${DOCKER_IMAGE}
            '''
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            echo "Configuring Git..."
            git config user.email "ashad.kauser@gmail.com"
            git config user.name "Ashhad Ali"
            
            echo "Fetching latest changes..."
            git checkout main || git checkout -b main
            git pull https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git main --rebase

            echo "Updating deployment manifest..."
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            
            echo "Committing changes..."
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"

            echo "Pushing changes..."
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git main
          '''
        }
      }
    }
  }
}
